Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925_000000

Compiler options: -pg -std=c99 -Wall -Ofast -xAVX -qopt-report=5 -qopt-report-phase=vec -qopt-report-filter=d2q9-bgk.c,207-404 -lm -o d2q9-bgk

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


   LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(168,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(168,5)
      remark #15388: vectorization support: reference cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
      remark #15388: vectorization support: reference cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
      remark #15388: vectorization support: reference cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
      remark #15388: vectorization support: reference cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
      remark #15388: vectorization support: reference cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
      remark #15388: vectorization support: reference cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
      remark #15388: vectorization support: reference cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
      remark #15388: vectorization support: reference cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
      remark #15388: vectorization support: reference cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
      remark #15388: vectorization support: reference cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
      remark #15388: vectorization support: reference cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
      remark #15388: vectorization support: reference cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.557
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15454: masked aligned unit stride loads: 9 
      remark #15455: masked aligned unit stride stores: 6 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 33 
      remark #15477: vector cost: 11.000 
      remark #15478: estimated potential speedup: 2.740 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(168,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
      remark #15388: vectorization support: reference cells.speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(259,32) ]
      remark #15389: vectorization support: reference cells.speeds1[x_w+jj*params.nx] has unaligned access   [ d2q9-bgk.c(260,32) ]
      remark #15389: vectorization support: reference cells.speeds2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(261,32) ]
      remark #15389: vectorization support: reference cells.speeds4[ii+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(263,32) ]
      remark #15389: vectorization support: reference cells.speeds5[x_w+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(264,32) ]
      remark #15389: vectorization support: reference cells.speeds8[x_w+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(267,32) ]
      remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
      remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds3[x_e+jj*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(262,32) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds6[x_e+y_s*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(265,32) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds7[x_e+y_n*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(266,32) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.177
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 17 
      remark #15449: unmasked aligned unit stride stores: 16 
      remark #15450: unmasked unaligned unit stride loads: 6 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15462: unmasked indexed (or gather) loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 386 
      remark #15477: vector cost: 135.250 
      remark #15478: estimated potential speedup: 2.640 
      remark #15482: vectorized math library calls: 1 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(244,3) inlined into d2q9-bgk.c(168,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
         remark #15388: vectorization support: reference cells.speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(259,32) ]
         remark #15389: vectorization support: reference cells.speeds1[x_w+jj*params.nx] has unaligned access   [ d2q9-bgk.c(260,32) ]
         remark #15389: vectorization support: reference cells.speeds2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(261,32) ]
         remark #15389: vectorization support: reference cells.speeds4[ii+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(263,32) ]
         remark #15389: vectorization support: reference cells.speeds5[x_w+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(264,32) ]
         remark #15389: vectorization support: reference cells.speeds8[x_w+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(267,32) ]
         remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
         remark #15388: vectorization support: reference tmp_cells.speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds3[x_e+jj*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(262,32) ]
         remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds6[x_e+y_s*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(265,32) ]
         remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells.speeds7[x_e+y_n*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(266,32) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.220
         remark #15301: SIMD LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 17 
         remark #15449: unmasked aligned unit stride stores: 16 
         remark #15450: unmasked unaligned unit stride loads: 6 
         remark #15455: masked aligned unit stride stores: 1 
         remark #15462: unmasked indexed (or gather) loads: 3 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 386 
         remark #15477: vector cost: 114.000 
         remark #15478: estimated potential speedup: 3.070 
         remark #15482: vectorized math library calls: 1 
         remark #15486: divides: 2 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(247,5) inlined into d2q9-bgk.c(168,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
      remark #15355: vectorization support: tot_u is float type reduction   [ d2q9-bgk.c(402,3) ]
      remark #15355: vectorization support: tot_cells is int type reduction   [ d2q9-bgk.c(398,20) ]

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(360:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(361:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(362:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(363:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(364:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(365:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(366:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(367:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(368:38)::main:  Assume directive not useful: removing

d2q9-bgk.c(370:31)::main:  Assume directive not useful: removing

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_cells *, int *)

    Report from: Vector optimizations [vec]

      remark #15355: vectorization support: tot_u is float type reduction   [ d2q9-bgk.c(402,3) ]
      remark #15355: vectorization support: tot_cells is int type reduction   [ d2q9-bgk.c(398,20) ]
===========================================================================

Begin optimization report for: timestep(const t_param, t_cells *, t_cells *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(210,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(210,3)
   remark #15388: vectorization support: reference cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
   remark #15388: vectorization support: reference cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
   remark #15388: vectorization support: reference cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
   remark #15388: vectorization support: reference cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
   remark #15388: vectorization support: reference cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
   remark #15388: vectorization support: reference cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
   remark #15388: vectorization support: reference cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
   remark #15388: vectorization support: reference cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
   remark #15388: vectorization support: reference cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
   remark #15388: vectorization support: reference cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
   remark #15388: vectorization support: reference cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
   remark #15388: vectorization support: reference cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.557
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15454: masked aligned unit stride loads: 9 
   remark #15455: masked aligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 11.000 
   remark #15478: estimated potential speedup: 2.740 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(373,3) inlined into d2q9-bgk.c(210,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(247,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(247,5)
   remark #15388: vectorization support: reference cells->speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(259,32) ]
   remark #15389: vectorization support: reference cells->speeds1[x_w+jj*params.nx] has unaligned access   [ d2q9-bgk.c(260,32) ]
   remark #15389: vectorization support: reference cells->speeds2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(261,32) ]
   remark #15389: vectorization support: reference cells->speeds4[ii+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(263,32) ]
   remark #15389: vectorization support: reference cells->speeds5[x_w+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(264,32) ]
   remark #15389: vectorization support: reference cells->speeds8[x_w+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(267,32) ]
   remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
   remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds3[x_e+jj*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(262,32) ]
   remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds6[x_e+y_s*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(265,32) ]
   remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds7[x_e+y_n*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(266,32) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.177
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 17 
   remark #15449: unmasked aligned unit stride stores: 16 
   remark #15450: unmasked unaligned unit stride loads: 6 
   remark #15455: masked aligned unit stride stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 386 
   remark #15477: vector cost: 135.250 
   remark #15478: estimated potential speedup: 2.640 
   remark #15482: vectorized math library calls: 1 
   remark #15486: divides: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(247,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(244,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(247,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(247,5)
      remark #15388: vectorization support: reference cells->speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(259,32) ]
      remark #15389: vectorization support: reference cells->speeds1[x_w+jj*params.nx] has unaligned access   [ d2q9-bgk.c(260,32) ]
      remark #15389: vectorization support: reference cells->speeds2[ii+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(261,32) ]
      remark #15389: vectorization support: reference cells->speeds4[ii+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(263,32) ]
      remark #15389: vectorization support: reference cells->speeds5[x_w+y_s*params.nx] has unaligned access   [ d2q9-bgk.c(264,32) ]
      remark #15389: vectorization support: reference cells->speeds8[x_w+y_n*params.nx] has unaligned access   [ d2q9-bgk.c(267,32) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(334,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(283,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(335,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(336,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(337,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(338,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(339,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(340,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(341,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(342,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds3[x_e+jj*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(262,32) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds6[x_e+y_s*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(265,32) ]
      remark #15328: vectorization support: irregularly indexed load was emulated for the variable <cells->speeds7[x_e+y_n*params.nx]>, part of index is nonlinearly computed   [ d2q9-bgk.c(266,32) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.220
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 17 
      remark #15449: unmasked aligned unit stride stores: 16 
      remark #15450: unmasked unaligned unit stride loads: 6 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15462: unmasked indexed (or gather) loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 386 
      remark #15477: vector cost: 114.000 
      remark #15478: estimated potential speedup: 3.070 
      remark #15482: vectorized math library calls: 1 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(247,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: accelerate_flow(const t_param, t_cells *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(373,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(373,3)
   remark #15388: vectorization support: reference cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
   remark #15388: vectorization support: reference cells->speeds1[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(383,7) ]
   remark #15388: vectorization support: reference cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
   remark #15388: vectorization support: reference cells->speeds5[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(384,7) ]
   remark #15388: vectorization support: reference cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
   remark #15388: vectorization support: reference cells->speeds8[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(385,7) ]
   remark #15388: vectorization support: reference cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
   remark #15388: vectorization support: reference cells->speeds3[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(387,7) ]
   remark #15388: vectorization support: reference cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
   remark #15388: vectorization support: reference cells->speeds6[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(388,7) ]
   remark #15388: vectorization support: reference cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
   remark #15388: vectorization support: reference cells->speeds7[ii+jj*params.nx] has aligned access   [ d2q9-bgk.c(389,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.557
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15454: masked aligned unit stride loads: 9 
   remark #15455: masked aligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 33 
   remark #15477: vector cost: 11.000 
   remark #15478: estimated potential speedup: 2.740 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(373,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_cells *, int *)

    Report from: Vector optimizations [vec]

      remark #15355: vectorization support: tot_u is float type reduction   [ d2q9-bgk.c(402,3) ]
      remark #15355: vectorization support: tot_cells is int type reduction   [ d2q9-bgk.c(398,20) ]
===========================================================================
